{"version":3,"sources":["webpack://llct-next/./worker_src/worker.ts"],"names":[],"mappings":"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","file":"service-worker.js","sourcesContent":["const sw = (self as unknown) as ServiceWorkerGlobalScope\n\nconst LLCT_STATIC_CACHE = '@llct/cache/static/v1'\nconst LLCT_DYNAMIC_CACHE = '@llct/cache/dynamic/v1'\n\ntype CacheStorageKey = typeof LLCT_STATIC_CACHE | typeof LLCT_DYNAMIC_CACHE\n\nconst STATIC_CACHE_URL = ['/', '/images/logo/Icon.svg']\n\nconst DO_NOT_CACHE_URL = ['vendors-_yarn']\n\ninterface LLCTCacheOption {\n  duration?: number\n}\n\nconst cachingExtensions: { [index: string]: LLCTCacheOption } = {\n  '.css': {},\n  '.js': {}\n}\n\nconst addCaches = (scope: CacheStorageKey) =>\n  caches.open(scope).then(cache => cache.addAll(STATIC_CACHE_URL))\n\nconst clearCaches = (scope: CacheStorageKey) =>\n  caches\n    .open(scope)\n    .then(async cache => (await cache.keys()).map(v => cache.delete(v)))\n\nconst extensionMatch = (url: string) =>\n  cachingExtensions[\n    Object.keys(cachingExtensions).filter(v => url.endsWith(v))[0]\n  ]\n\nconst cacheHandler = async (req: Request) => {\n  const storage = await caches.open(LLCT_STATIC_CACHE)\n\n  const exists = await storage.match(req)\n\n  if (exists) {\n    return exists\n  }\n\n  const data = await fetch(req)\n\n  storage.put(req, data.clone())\n\n  return data\n}\n\nsw.addEventListener('install', ev => {\n  sw.skipWaiting()\n\n  clearCaches(LLCT_STATIC_CACHE)\n  clearCaches(LLCT_DYNAMIC_CACHE)\n\n  ev.waitUntil(addCaches(LLCT_STATIC_CACHE))\n})\n\nsw.addEventListener('activate', ev => {\n  console.log(ev)\n})\n\nsw.addEventListener('fetch', ev => {\n  if (DO_NOT_CACHE_URL.filter(v => ev.request.url.indexOf(v) > -1).length) {\n    return ev\n  }\n\n  const url = new URL(ev.request.url)\n\n  // const globalCache = await LLCTCache\n\n  // const matchResponse = await globalCache.match(ev.request)\n  // if (matchResponse) {\n  //   console.log('match', matchResponse)\n\n  //   return ev.respondWith(matchResponse.clone())\n  // }\n\n  if (url.origin === process.env.API_SERVER) {\n    // console.log('request from Api server', ev)\n\n    return ev\n  } else if (sw.registration.scope.indexOf(url.origin) === 0) {\n    const matches = extensionMatch(url.pathname)\n\n    if (matches) {\n      return ev.respondWith(cacheHandler(ev.request))\n    }\n\n    return ev\n  }\n\n  return ev\n})\n"],"sourceRoot":""}